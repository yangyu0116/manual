<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<link rel="stylesheet" href="Word2Chm.css" type="text/css">
<title> AnalogClock</title>
</head>
<body>     
<div class=WordSection66 style='layout-grid:15.6pt'><br clear=all
style='page-break-before:always'>

<p class=MsoNormal align=center style='text-align:center'><a name=AnalogClock><b><span
lang=EN-US style='font-size:22.0pt'>AnalogClock</span></b></a></p>
<p class=MsoNormal align=center style='text-align:center'><span
>农民伯伯</span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>版本：</span><span>Android 2.2 r1</span></p>
<p class=MsoNormal align=center style='text-align:center'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><i><span>public
class <span style='color:#C00000'>AnalogClock</span><span style='color:red'> </span>extends
<span style='color:#C00000'>View</span></span></i></b></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>java.lang.Object</span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
lang=EN-US><a target="_blank" href="http://www.cnblogs.com/over140/archive/2010/09/11/1823806.html">android.view.View</a></span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
lang=EN-US>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; android.widget.AnalogClock</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
>概述</span></b></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img
border=0 width=165 height=151
src="image/image055.jpg"></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>这个控件是一个带有时针和分针的模拟时钟。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
>受保护方法</span></b></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:silver'>protected void onAttachedToWindow ()</span></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>视图（</span><span>AnalogClock</span><span
>）附在窗体时调用。在调用时，视图在窗体表面并开始绘制。注意保证这个方法在</span><span
lang=EN-US>onDraw(Canvas)</span><span >以前被调用，但是它可以在首次</span><span
lang=EN-US>onDraw</span><span >以前任何时间调用――包括</span><span
lang=EN-US>onMeasure(int, int)</span><span >之前或之后。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:silver'>protected void onDetachedFromWindow ()</span></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>视图（</span><span>DigitalClock</span><span
>）从窗体上分离（移除）时调用，同时窗体表面不再绘制视图。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:silver'>protected void onDraw (Canvas canvas)</span></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>实现你自己的绘制。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; canvas
&nbsp;&nbsp; </span><span >在画布上绘制背景</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:silver'>protected void onMeasure (int widthMeasureSpec, int
heightMeasureSpec)</span></span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >测量这个视图以确定其内容的高度和宽度。通过</span><span
lang=EN-US>measure(int, int)</span><span >来调用这个方法，并且应该由子类重写以提高内容测量的效率和精确度。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >约定：当该方法被重写时，你必须调用</span><span
lang=EN-US>setMeasuredDimension(int, int)</span><span >来存储已测量视图的高度和宽度。否则将通过</span><span
lang=EN-US>measure(int, int)</span><span >抛出一个</span><span
lang=EN-US>IllegalStateException</span><span >异常。调用父类的</span><span
lang=EN-US>onMeasure(int, int)</span><span >方法是一个有效的办法。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >父类的实现是以背景大小为默认大小，除非</span><span
lang=EN-US>MeasureSpec</span><span >（测量细则）允许更大的背景。</span><span
lang=EN-US>&nbsp; </span><span >为了更好测量内容子类应该重写</span><span
lang=EN-US>onMeasure(int, int)</span><span >。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >如果这个方法被重写，子类有责任确保测量它的高度和宽度至少是视图的最小宽度和高度（</span><span
lang=EN-US>getSuggestedMinimumHeight()</span><span >和</span><span
lang=EN-US>getSuggestedMinimumWidth()</span><span >）。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>widthMeasureSpec &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>由于父类有横向空间要求，参见</span><span>View.MeasureSpec</span><span
>。</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; heightMeasureSpec
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span >由于父类有纵向空间要求，参见</span><span
lang=EN-US>View.MeasureSpec</span><span >。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:silver'>protected void onSizeChanged (int w, int h, int oldw,
int oldh)</span></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>布局期间当视图的大小发生改变时调用。如果只是添加到视图，调用时显示的是旧值</span><span
lang=EN-US>0</span><span >。（译者注：也就是添加到视图时，</span><span
lang=EN-US>oldw</span><span >和</span><span>oldh</span><span
>返回的是</span><span>0</span><span
>）</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w
&nbsp;&nbsp;&nbsp; </span><span >视图当前宽度</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h
&nbsp;&nbsp;&nbsp;&nbsp; </span><span >视图当前高度</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oldw
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span >视图以前的宽度</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oldh
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='font-family:
宋体'>视图以前的高度</span></p>

</div>

<span style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><br
clear=all style='page-break-before:auto'>
</span>

      
</body>
</html>
