<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<link rel="stylesheet" href="Word2Chm.css" type="text/css">
<title> ScrollView</title>
</head>
<body>     
<div class=WordSection113 style='layout-grid:15.6pt'><br clear=all
style='page-break-before:always'>

<p class=MsoNormal align=center style='text-align:center'><a name=ScrollView><b><span
lang=EN-US style='font-size:18.0pt'>ScrollView</span></b></a></p>
<p class=MsoNormal align=center style='text-align:center'><span
>译者署名：</span><span> pengyouhong</span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>版本：</span><span>Android 2.3 r1</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>结构</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>继承关系</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><b><i><span>public class <span style='color:
#C00000'>ScrollView </span>extends <span style='color:#C00000'>FrameLayout</span></span></i></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><span>java.lang.Object</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left;
text-indent:21.0pt'><span>android.view.View</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left;
text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android.view.ViewGroup</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left;
text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android.widget.FrameLayout</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left;
text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android.widget.ScrollView</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>类概述</span></b> </p>
<p class=MsoNormal style='text-indent:24.0pt'><span >一种可供用户滚动的层次结构布局容器，允许显示比实际多的内容。</span><span
lang=EN-US>ScrollView</span><span >是一种</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/widget/FrameLayout.html"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>FrameLayout</span></a></span></code><span
>，意味需要在其上放置有自己滚动内容的子元素。子元素可以是一个复杂的对象的布局管理器。通常用的子元素是垂直方向的</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/widget/LinearLayout.html"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>LinearLayout</span></a></span></code><span
>，显示在最上层的垂直方向可以让用户滚动的箭头。</span></p>
<p style='margin:0cm;margin-bottom:.0001pt;text-indent:21.0pt'><code><span
lang=EN-US style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><a target="_blank" href="http://developer.android.com/reference/android/widget/TextView.html">TextView</a></span></code><span
style='font-size:10.5pt'>类也有自己的滚动功能，所以不需要使用</span><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>ScrollView</span><span
style='font-size:10.5pt'>，但是只有两个结合使用，才能保证显示较多内容时候的效率。但只有两者结合使用才可以实现在一个较大的容器中一个文本视图效果。</span></p>
<p style='margin:0cm;margin-bottom:.0001pt;text-indent:21.0pt'><span
lang=EN-US style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>ScrollView</span><span
style='font-size:10.5pt'>只支持垂直方向的滚动。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>构造函数</span></b></p>
<p class=MsoNormal style='margin-left:24.0pt'><span
style='background:silver'>public <b>ScrollView</b> (<a
href="android/android-sdk-windows/docs/reference/android/content/Context.html"><span
style='color:windowtext;text-decoration:none'>Context</span></a> context) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >创建一个默认属性的</span><span
lang=EN-US>ScrollView</span><span >实例。</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public <b>ScrollView</b> (<a
href="android/android-sdk-windows/docs/reference/android/content/Context.html"><span
style='color:windowtext;text-decoration:none'>Context</span></a> context, <a
href="android/android-sdk-windows/docs/reference/android/util/AttributeSet.html"><span
style='color:windowtext;text-decoration:none'>AttributeSet</span></a> attrs)</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >创建一个带有</span><span
lang=EN-US>attrs</span><span >属性的</span><span>ScrollView
</span><span >实例。</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public <b>ScrollView</b> (<a
href="android/android-sdk-windows/docs/reference/android/content/Context.html"><span
style='color:windowtext;text-decoration:none'>Context</span></a> context, <a
href="android/android-sdk-windows/docs/reference/android/util/AttributeSet.html"><span
style='color:windowtext;text-decoration:none'>AttributeSet</span></a> attrs,
int defStyle) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >创建一个带有</span><span
lang=EN-US>attrs</span><span >属性，并且指定其默认样式的</span><span
lang=EN-US>ScrollView</span><span >实例。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>公共方法</span></b></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public void <b>addView</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child) </span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>添加子视图。如果事先没有给子视图设置</span><span
style='font-family:"Arial","sans-serif"'>layout</span><span style='font-family:
宋体'>参数，会采用当前</span><span style='font-family:"Arial","sans-serif"'>ViewGroup</span><span
>的默认参数来设置子视图。</span></p>
<p class=MsoNormal><b><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
>参数</span></p>
<p class=MsoNormal><b><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>child<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>所添加的子视图</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public void <b>addView</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, int index)
</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >添加子视图。如果事先没有给子视图设置</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>layout</span><span
>参数，会采用当前</span><span style='font-family:"Arial","sans-serif"'>ViewGroup</span><span
>的默认参数来设置子视图。</span></p>
<p class=MsoNormal style='margin-left:15.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:39.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>child<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>所添加的子视图</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>添加子视图的位置</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public void <b>addView</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, int index,
<a
href="android/android-sdk-windows/docs/reference/android/view/ViewGroup.LayoutParams.html"><span
style='color:windowtext;text-decoration:none'>ViewGroup.LayoutParams</span></a>
params) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >根据指定的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>layout</span><span
>参数添加子视图</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><b><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>child<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>所添加的子视图</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>添加子视图的位置</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; params<i>&nbsp;&nbsp; </i></span><span
>为子视图设置的</span><span style='font-family:"Arial","sans-serif"'>layout</span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><b><span
style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;</span></b></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public void <b>addView</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, <a
href="android/android-sdk-windows/docs/reference/android/view/ViewGroup.LayoutParams.html"><span
style='color:windowtext;text-decoration:none'>ViewGroup.LayoutParams</span></a>
params) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >根据指定的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>layout</span><span
>参数添加子视图。</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><b><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>child<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>所添加的子视图</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; params<i>&nbsp;&nbsp; </i></span><span
>为子视图设置的</span><span style='font-family:"Arial","sans-serif"'>layout</span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><b><span
style='font-family:"Arial","sans-serif"'>&nbsp;</span></b></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public boolean <b>arrowScroll</b> (int direction) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >响应点击上下箭头时对滚动条滚动的处理。</span></p>
<p class=MsoNormal><b><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
>参数</span></p>
<p class=MsoNormal><b><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>direction<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>按下的箭头所对应的方向</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>如果我们处理（消耗）了此事件返回</span><span
style='font-family:"Arial","sans-serif"'>true</span><span style='font-family:
宋体'>，否则返回</span><span style='font-family:"Arial","sans-serif"'>false</span><span
>。</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public void <b>computeScroll</b> () </span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>被父视图调用，用于必要时候对其子视图的值（<span
lang=EN-US>mScrollX</span>和<span>mScrollY</span>）进行更新。典型的情况如：父视图中某个子视图使用一个<code><span
lang=EN-US><a target="_blank" href="http://androidappdocs-staging.appspot.com/reference/android/widget/Scroller.html">Scroller</a></span></code>对象来实现滚动操作，会使得此方法被调用。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public boolean <b>dispatchKeyEvent</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/KeyEvent.html"><span
style='color:windowtext;text-decoration:none'>KeyEvent</span></a> event) </span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>发送一个</span><span style='font-family:"Arial","sans-serif"'>key</span><span
>事件给当前焦点路径的下一个视图。此焦点路径从视图树的顶层执行直到当前焦点视图。如果此视图为焦点视图，将为自己发送。否则，会为当前焦点路径的下一个节点发送。此方法也会激起一个</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>key</span><span
>监听器。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><b><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>event<i>&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>发送的</span><span style='font-family:"Arial","sans-serif"'>key</span><span
>事件</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>事件被处理返回</span><span style='font-family:"Arial","sans-serif"'>true</span><span
>，否则返回</span><span style='font-family:"Arial","sans-serif"'>false</span><span
>。</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>draw</b> (Canvas canvas)</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>手动绘制视图（及其子视图）到指定的画布<span
lang=EN-US>(Canvas)</span>。这个视图必须在调用这个函数之前做好了整体布局。当实现一个视图时，不需要继承这个方法；相反，你应该实现</span><code><span
lang=EN-US><a target="_blank" href="http://androidappdocs-staging.appspot.com/reference/android/view/View.html#onDraw%28android.graphics.Canvas%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>onDraw(Canvas)</span></a></span></code><code><span
style='font-size:10.5pt'>方法。</span></code></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt;text-indent:21.0pt'><span style='font-size:10.5pt'>参数</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:42.0pt;
margin-bottom:.0001pt;text-indent:21.0pt'><span style='font-size:
10.5pt;font-family:"Calibri","sans-serif"'>canvas</span><span
style='font-size:10.5pt'> &nbsp;&nbsp; </span><span style='font-size:10.5pt'>绘制视图的画布</span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public boolean <b>executeKeyEvent</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/KeyEvent.html"><span
style='color:windowtext;text-decoration:none'>KeyEvent</span></a> event) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >当接收到</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>key</span><span
>事件时，用户可以调用此函数来使滚动视图执行滚动，类似于处理由视图体系发送的事件。</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:39.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>event<i>&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>需要执行</span><span style='font-family:"Arial","sans-serif"'>key</span><span
>的事件</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>事件被处理返回</span><span style='font-family:"Arial","sans-serif"'>true</span><span
>，否则返回</span><span style='font-family:"Arial","sans-serif"'>false</span><span
>。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public void <b>fling</b> (int velocityY) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >滚动视图的滑动（</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>fling</span><span
>）手势。（译者注：</span><span style='font-family:"Arial","sans-serif"'>
<span style='color:#333333'><a target="_blank" href="http://www.javaeye.com/problems/47213"><span style='font-family:
宋体'><span>如何监听</span></span>android<span
><span>的屏幕滑动停止事件</span></span></a></span></span><span
style=';color:#333333'>）</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><b><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>velocityY<i> &nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>Y</span><span
>方向的初始速率。正值表示手指</span><span style='font-family:
"Arial","sans-serif"'>/</span><span >光标向屏幕下方滑动，而内容将向上滚动。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public boolean <b>fullScroll</b> (int direction) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span style=';
color:#333333'>对响应“</span><span style='font-family:"Arial","sans-serif";
color:#333333'>home/end</span><span style=';color:#333333'>”短按时响应滚动处理。此方法将视图滚动到顶部或者底部，并且将焦点置于新的可视区域的最顶部</span><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>/</span><span
style=';color:#333333'>最底部组件。若没有适合的组件做焦点，当前的</span><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>ScrollView</span><span
style=';color:#333333'>会收回焦点。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>direction<i> </i></span><span
style=';color:#333333'>滚动方向：</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#FOCUS_UP"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>FOCUS_UP</span></a></span></code><span
style=';color:#333333'>表示视图向上滚动；</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>FOCUS_DOWN</span></a></span></code><span
style=';color:#333333'>表示视图向下滚动</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
style=';color:#333333'>若</span><span style='font-family:
"Arial","sans-serif";color:#333333'>key</span><span style=';
color:#333333'>事件被</span><span >消耗</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>(consumed)</span><span
style=';color:#333333'>返回</span><span
style='font-family:"Arial","sans-serif";color:#333333'>true</span><span
style=';color:#333333'>，其他情况返回</span><span
style='font-family:"Arial","sans-serif";color:#333333'>false</span><span
style=';color:#333333'>。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public int <b>getMaxScrollAmount</b> () </span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
style=';color:#333333'>当前滚动视图响应箭头事件能够滚动的最大数。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public boolean <b>isFillViewport</b> () </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span style=';
color:#333333'>指示当前</span><span style='font-family:"Arial","sans-serif";
color:#333333'>ScrollView</span><span style=';color:#333333'>的内容是否被拉伸以填充</span><span
style=';color:#C00000'>视图</span><span style=';
color:#C00000'>可视范围</span><span style=';color:#333333'>（译者注：</span><span
lang=EN-US>viewport</span><span >可视范围，参见</span><span
lang=EN-US><a target="_blank" href="http://blog.chinaunix.net/u1/34831/showart_2406023.html"><span
lang=EN-US ><span>决定</span></span>Scrollviewer<span
lang=EN-US ><span>里面</span></span>Control<span
lang=EN-US ><span>的可视范围</span></span></a></span><span
style=';color:#333333'>）。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
style=';color:#333333'>内容填充视图返回</span><span
style='font-family:"Arial","sans-serif";color:#333333'>true</span><span
style=';color:#333333'>，否则返回</span><span
style='font-family:"Arial","sans-serif";color:#333333'>false</span><span
style=';color:#333333'>。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='margin-left:3.0pt;text-indent:21.0pt'><span
lang=EN-US style='background:silver'>public boolean <b>isSmoothScrollingEnabled</b>
() </span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:18.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><b><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
>按箭头方向滚动时，是否显示滚动的平滑效果。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public boolean <b>onInterceptTouchEvent</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/MotionEvent.html"><span
style='color:windowtext;text-decoration:none'>MotionEvent</span></a> ev) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >实现此方法是为了拦截所有触摸屏幕时的运动事件。可以像处理发送给子视图的事件一样去监视这些事件，并且获取当前手势在任意点的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>ownership</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >使用此方法时候需要注意，因为它与</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#onTouchEvent%28android.view.MotionEvent%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>View.onTouchEvent(MotionEvent)</span></a></span></code><span
>有相当复杂的交互，并且前提需要正确执行</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#onTouchEvent%28android.view.MotionEvent%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>View.onTouchEvent(MotionEvent)</span></a></span></code><span
>。事件将按照如下顺序接收到：</span></p>
<p class=MsoNormal style='margin-left:60.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span >收到</span><span
style='font-family:"Arial","sans-serif"'>down</span><span style='font-family:
宋体'>事件</span></p>
<p class=MsoNormal style='margin-left:60.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"Arial","sans-serif"'>Down</span><span
>事件或者由视图组的一个子视图处理，或者被用户自己的</span><span
style='font-family:"Arial","sans-serif"'>onTouchEvent()</span><span
>方法处理；此处理意味你应该执行</span><span style='font-family:
"Arial","sans-serif"'>onTouchEvent()</span><span >时返回</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>true</span><span
>，这样才能继续看到剩下的手势（取代找一个父视图处理）。如果</span><span
style='font-family:"Arial","sans-serif"'>onTouchEvent()</span><span
>返回</span><span style='font-family:"Arial","sans-serif"'>true</span><span
>时，你不会收到</span><span style='font-family:"Arial","sans-serif"'>onInterceptTouchEvent()</span><span
>的任何事件并且所有对触摸的处理必须在</span><span
style='font-family:"Arial","sans-serif"'>onTouchEvent()</span><span
>中发生。</span></p>
<p class=MsoNormal style='margin-left:60.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span >如果此方法返回</span><span
style='font-family:"Arial","sans-serif"'>false</span><span style='font-family:
宋体'>，接下来的事件（</span><span style='font-family:"Arial","sans-serif"'>up
to and including the final up</span><span >）将最先被传递当此，然后是目标的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>onTouchEvent()</span><span
>。</span></p>
<p class=MsoNormal style='margin-left:60.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span >如果返回</span><span
style='font-family:"Arial","sans-serif"'>true</span><span style='font-family:
宋体'>，将不会收到以下任何事件：目标</span><span style='font-family:"Arial","sans-serif"'>view</span><span
>将收到同样的事件但是会伴随</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/MotionEvent.html#ACTION_CANCEL"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>ACTION_CANCEL</span></a></span></code><span
>，并且所有的更进一步的事件将会传递到你自己的</span><span
style='font-family:"Arial","sans-serif"'>onTouchEvent()</span><span
>方法中而不会再在这里出现。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt'><b><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>ev<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>体系向下发送的动作事件</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:48.0pt;text-indent:24.0pt'><span
>如果将运动事件从子视图中截获并且通过</span><span
style='font-family:"Arial","sans-serif"'>onTouchEvent()</span><span
>发送到当前</span><span style='font-family:"Arial","sans-serif"'>ViewGroup
</span><span >，返回</span><span
style='font-family:"Arial","sans-serif"'>true</span><span style='font-family:
宋体'>。当前目标将会收到</span><span style='font-family:"Arial","sans-serif"'>ACTION_CANCEL</span><span
>事件，并且不再会有其他消息传递到此。</span><span style='font-family:"Arial","sans-serif"'>
</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>（译者注：</span><span
style='font-family:"Arial","sans-serif";color:#333333'><a target="_blank" href="http://blog.csdn.net/ddna/archive/2010/04/11/5473293.aspx">onInterceptTouchEvent<span
lang=EN-US ><span>和</span></span>onTouchEvent<span
lang=EN-US ><span>调用时序</span></span></a></span><span
style=';color:#333333'>）</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public boolean <b>onTouchEvent</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/MotionEvent.html"><span
style='color:windowtext;text-decoration:none'>MotionEvent</span></a> ev) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >执行此方法为了处理触摸屏幕的运动事件。</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp; ev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>运动事件</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>事件被处理返回</span><span style='font-family:"Arial","sans-serif"'>true</span><span
>，其它返回</span><span style='font-family:"Arial","sans-serif"'>false</span><span
>。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public boolean <b>pageScroll</b> (int direction) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span style=';
color:#333333'>响应短按“</span><span style='font-family:"Arial","sans-serif";
color:#333333'>page up/ down</span><span style=';color:#333333'>”时候对滚动的处理。此方法将向上或者向下滚动一屏，并且将焦点置于新可视区域的最上</span><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>/</span><span
style=';color:#333333'>最下。如果没有适合的</span><span
style='font-family:"Arial","sans-serif";color:#333333'>component</span><span
style=';color:#333333'>作为焦点，当前</span><span
style='font-family:"Arial","sans-serif";color:#333333'>scrollView</span><span
style=';color:#333333'>将收回焦点。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>direction<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
style=';color:#333333'>滚动方向：</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#FOCUS_UP"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>FOCUS_UP</span></a></span></code><span
style=';color:#333333'>表示向上翻一页，</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>FOCUS_DOWN</span></a></span></code><span
style=';color:#333333'>表示向下翻一页。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
style=';color:#333333'>此</span><span style='font-family:
"Arial","sans-serif";color:#333333'>key</span><span style=';
color:#333333'>事件被</span><span >消耗</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>(cosumed)</span><span
style=';color:#333333'>返回</span><span
style='font-family:"Arial","sans-serif";color:#333333'>true</span><span
style=';color:#333333'>，其他返回</span><span
style='font-family:"Arial","sans-serif";color:#333333'>false</span><span
style=';color:#333333'>。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public void <b>requestChildFocus</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, <a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> focused) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >当父视图的一个子视图的要获得焦点时，调用此方法。</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>child<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>要获得焦点的父视图的子视图。此视图包含了焦点视图。如果没有特殊徐要求，此视图实际上就是焦点视图。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><i><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></i><span
lang=EN-US style='font-family:"Arial","sans-serif"'>focused<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>子视图的子孙视图并且此子孙视图是真正的焦点视图</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public boolean <b>requestChildRectangleOnScreen</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, <a
href="android/android-sdk-windows/docs/reference/android/graphics/Rect.html"><span
style='color:windowtext;text-decoration:none'>Rect</span></a> rectangle,
boolean immediate) </span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>当组里的某个子视图需要被定位在屏幕的某个矩形范围时，调用此方法。重载此方法的</span><code><span
lang=EN-US style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><a target="_blank" href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></span></code><span
style='font-size:10.5pt'>可确认以下几点：</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;
* </span><span style='font-size:10.5pt'>子项目将是组里的直系子项</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;
* </span><span style='font-size:10.5pt'>矩形将在子项目的坐标体系中</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>重载此方法的</span><code><span
lang=EN-US style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><a target="_blank" href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></span></code><span
style='font-size:10.5pt'>应该支持以下几点：</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;
* </span><span style='font-size:10.5pt'>若矩形已经是可见的，则没有东西会改变</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;
* </span><span style='font-size:10.5pt'>为使矩形区域全部可见，视图将可以被滚动显示</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt;text-indent:21.0pt'><span style='font-size:10.5pt'>参数</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:42.0pt;
margin-bottom:.0001pt;text-indent:21.0pt'><span style='font-size:
10.5pt;font-family:"Calibri","sans-serif"'>child</span><span
style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-size:10.5pt'>发出请求的子视图</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:42.0pt;
margin-bottom:.0001pt;text-indent:21.0pt'><span style='font-size:
10.5pt;font-family:"Calibri","sans-serif"'>rectangle</span><span
style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp; </span><span style='font-size:10.5pt'>子项目坐标系内的矩形，即此子项目希望在屏幕上的定位</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:42.0pt;
margin-bottom:.0001pt;text-indent:21.0pt'><span style='font-size:
10.5pt;font-family:"Calibri","sans-serif"'>immediate</span><span
style='font-size:10.5pt'> &nbsp;&nbsp;</span><span style='font-size:10.5pt'>设为<span
lang=EN-US>true</span>，则禁止动画和平滑移动滚动条</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.5pt'>返回值</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt'>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='font-size:10.5pt'>进行了滚动操作的这个组（</span><span
lang=EN-US style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>group</span><span
style='font-size:10.5pt'>），是否处理此操作。<span><br>
<br>
</span></span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public void <b>requestLayout</b> () </span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt;color:#333333'>当有改变引起当前视图重新布局时，调用此函数。它将规划一个视图树的</span><span
lang=EN-US style='font-size:10.5pt;font-family:"Arial","sans-serif";color:#333333'>layout</span><span
style='font-size:10.5pt;color:#333333'>路径。</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt;font-family:
"Arial","sans-serif";color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public void <b>scrollTo</b> (int x, int y) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span style=';
color:#333333'>设置当前视图滚动到的位置。此函数会引起对</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#onScrollChanged%28int,%20int,%20int,%20int%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>onScrollChanged(int,
int, int, int)</span></a></span></code><span style=';color:#333333'>函数的调用并且会让视图更新。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span style=';
color:#333333'>当前版本取消了在子视图中的滚动。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp; x&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>滚动到的</span><span
style='font-family:"Arial","sans-serif";color:#333333'>X</span><span
style=';color:#333333'>位置</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt;font-family:
"Arial","sans-serif";color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-size:10.5pt;color:#333333'>滚动到的</span><span
style='font-size:10.5pt;font-family:"Arial","sans-serif";color:#333333'>Y</span><span
style='font-size:10.5pt;color:#333333'>位置</span></p>
<p style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:21.0pt;
margin-bottom:.0001pt'><span style='font-size:10.5pt;font-family:
"Arial","sans-serif";color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public void <b>setFillViewport</b> (boolean
fillViewport) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span style=';
color:#333333'>设置当前滚动视图是否将内容高度拉伸以填充</span><span style=';
color:#C00000'>视图可视范围</span><span style=';color:#333333'>（译者注：</span><span
lang=EN-US>viewport</span><span >可视范围，参见</span><span
lang=EN-US><a target="_blank" href="http://blog.chinaunix.net/u1/34831/showart_2406023.html"><span
lang=EN-US ><span>决定</span></span>Scrollviewer<span
lang=EN-US ><span>里面</span></span>Control<span
lang=EN-US ><span>的可视范围</span></span></a></span><span
style=';color:#333333'>）。</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>fillViewport<i>&nbsp;&nbsp;&nbsp; </i></span><span
style=';color:#333333'>设置为</span><span
style='font-family:"Arial","sans-serif";color:#333333'>true</span><span
style=';color:#333333'>表示拉伸内容高度来适应视口边界；其他设为</span><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>false</span><span
style=';color:#333333'>。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span
style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US style='font-family:"Arial","sans-serif";background:#D9D9D9'>public
void <b>setOverScrollMode</b> (int mode)</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
>为视图设置</span><span>over-scroll</span><span
>模式。有效的</span><span>over-scroll</span><span
>模式有</span><code><span style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>OVER_SCROLL_ALWAYS</span></a></span></code><span
>（缺省值），</span><code><span style='font-size:
12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>OVER_SCROLL_IF_CONTENT_SCROLLS</span></a></span></code><span
>（只允许当视图内容大过容器时，进行</span><span>over-scrolling</span><span
>）和</span><code><span style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>OVER_SCROLL_NEVER</span></a></span></code><span
>。只有当视图可以滚动时，此项设置才起作用。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
>（<span style='color:#C00000'>译者注：这个函数是</span></span><span
lang=EN-US style='color:#C00000'>2.3 r1 </span><span style=';
color:#C00000'>中新增的，</span><span style='color:#C00000'>API Level 9</span><span
style=';color:#C00000'>。</span><span >关于</span><span
lang=EN-US>over-scroll</span><span >这里译为弹性滚动，即，参见帖子：</span><span
lang=EN-US><a target="_blank" href="http://www.eoeandroid.com/thread-52408-1-1.html"><span
lang=EN-US ><span>类似</span></span>iPhone<span
lang=EN-US ><span>的弹性</span></span>ListView<span
lang=EN-US ><span>滚动</span></span></a></span><span
>）</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mode
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The new over-scroll mode for this view.</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>public void <b>setSmoothScrollingEnabled</b> (boolean
smoothScrollingEnabled) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >用来设置箭头滚动是否可以引发视图滚动。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>smoothScrollingEnabled<i>&nbsp;&nbsp;&nbsp; </i></span><span
>设置箭头滚动是否可以引起内容的滚动的</span><span
style='font-family:"Arial","sans-serif"'>bool</span><span style='font-family:
宋体'>值</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public final void <b>smoothScrollBy</b> (int dx, int
dy) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >类似于</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#scrollBy%28int,%20int%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>scrollBy(int, int)</span></a></span></code><span
>，但是滚动时候是平缓的而不是立即滚动到某处。</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>dx<i>&nbsp;&nbsp; </i></span><span
>在</span><span style='font-family:"Arial","sans-serif"'>X</span><span
>方向滚动的像素数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><i><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></i><span
lang=EN-US style='font-family:"Arial","sans-serif"'>dy<i>&nbsp;&nbsp; </i></span><span
>在</span><span style='font-family:"Arial","sans-serif"'>Y</span><span
>方向滚动的像素数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;</span></b></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>public final void <b>smoothScrollTo</b> (int x, int
y) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span style=';
color:#333333'>类似于</span><code><span style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/widget/ScrollView.html#scrollTo%28int,%20int%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>scrollTo(int, int)</span></a></span></code><span
style=';color:#333333'>，但是滚动时候是平缓的而不是立即滚动到某处。</span></p>
<p class=MsoNormal style='margin-left:18.0pt;text-indent:24.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>x<i>&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
style=';color:#333333'>要滚动到位置的</span><span
style='font-family:"Arial","sans-serif";color:#333333'>X</span><span
style=';color:#333333'>坐标</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><i><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></i><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>y&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>要滚动到位置的</span><span
style='font-family:"Arial","sans-serif";color:#333333'>Y</span><span
style=';color:#333333'>坐标</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>受保护方法</span></b></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>protected int <b>computeScrollDeltaToGetChildRectOnScreen</b>
(<a href="android/android-sdk-windows/docs/reference/android/graphics/Rect.html"><span
style='color:windowtext;text-decoration:none'>Rect</span></a> rect) </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span style=';
color:#333333'>计算</span><span style='font-family:"Arial","sans-serif";
color:#333333'>X</span><span style=';color:#333333'>方向滚动的总合，以便在屏幕上显示子视图的完整矩形（或者，若矩形宽度超过屏幕宽度，至少要填满第一个屏幕大小）。</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>rect<i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i></span><span
>矩形</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:48.0pt;text-indent:24.0pt'><span
>滚动差值</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>protected int <b>computeVerticalScrollOffset</b> () </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >计算垂直方向滚动条的滑块的偏移。此值用来计算滚动条轨迹的滑块的位置。</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >范围可以以任意单位表示，但是必须与</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#computeVerticalScrollRange%28%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>computeVerticalScrollRange()</span></a></span></code><span
style=';color:#333333'>和</span><code><span
style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#computeVerticalScrollExtent%28%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>computeVerticalScrollExtent()</span></a></span></code><span
>的单位一致。</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span >缺省的偏移是在当前视图滚动的偏移。</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:48.0pt;text-indent:24.0pt'><span
>滚动条的滑块垂直方向的偏移。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>protected int <b>computeVerticalScrollRange</b> () </span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span style=';
color:#333333'>滚动视图的可滚动范围是所有子元素的高度。</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
style=';color:#333333'>返回值</span></p>
<p class=MsoNormal style='margin-left:48.0pt;text-indent:24.0pt'><span
style=';color:#333333'>由垂直方向滚动条代表的所有垂直范围，缺省的范围是当前视图的画图高度。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected float <b>getBottomFadingEdgeStrength</b> ()
</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回滚动底部的能见度。能见度的值的范围是</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>0.0</span><span
>（没有消失）到</span><span style='font-family:"Arial","sans-serif"'>1.0</span><span
>（完全消失）之间。缺省的执行返回值为</span><span
style='font-family:"Arial","sans-serif"'>0.0</span><span style='font-family:
宋体'>或者</span><span style='font-family:"Arial","sans-serif"'>1.0</span><span
>，而不是他们中间的某个值。滚动时子类需要重载这个方法来提供一个平缓的渐隐的实现。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>滚动底部能见度，值的范围在浮点数</span><span
 style='font-family:"Arial","sans-serif"'>0.0f</span><span
>到</span><span
 style='font-family:"Arial","sans-serif"'>1.0f</span><span
>之间。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected float <b>getTopFadingEdgeStrength</b> () </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回滚动顶部的能见度。能见度的值的范围是</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>0.0</span><span
>（没有消失）到</span><span style='font-family:"Arial","sans-serif"'>1.0</span><span
>（完全消失）之间。缺省的执行返回值为</span><span
style='font-family:"Arial","sans-serif"'>0.0</span><span style='font-family:
宋体'>或者</span><span style='font-family:"Arial","sans-serif"'>1.0</span><span
>，而不是他们中间的某个值。滚动时子类需要重载这个方法来提供一个平缓的渐隐的实现。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>滚动顶部能见度，值的范围在浮点数</span><span
 style='font-family:"Arial","sans-serif"'>0.0f</span><span
>到</span><span
 style='font-family:"Arial","sans-serif"'>1.0f</span><span
>之间。</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected void <b>measureChild</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, int
parentWidthMeasureSpec, int parentHeightMeasureSpec) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span style=';
color:#333333'>要求当前视图的一个子视图测量自己，同时兼顾到当前视图的</span><span
style='font-family:"Arial","sans-serif";color:#333333'>MeasureSpec</span><span
style=';color:#333333'>的要求和它的空白。子视图必须有</span><span
style='font-family:"Arial","sans-serif";color:#333333'>MarginLayoutParams</span><span
style=';color:#333333'>。比较复杂的工作是在</span><span
style='font-family:"Arial","sans-serif";color:#333333'>getChildMeasureSpec</span><span
style=';color:#333333'>中完成的。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>child&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>需要自己测量的子视图</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>parentWidthMeasureSpec &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>当前视图要求的宽度</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>parentHeightMeasureSpec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>当前视图要求的宽度</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif";
color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected void <b>measureChildWithMargins</b> (<a
href="android/android-sdk-windows/docs/reference/android/view/View.html"><span
style='color:windowtext;text-decoration:none'>View</span></a> child, int
parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int
heightUsed) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >要求当前视图的一个子视图测量自己，同时兼顾到当前视图的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>MeasureSpec</span><span
>的要求和它的空白和边界。子视图必须有</span><span
style='font-family:"Arial","sans-serif"'>MarginLayoutParams</span><span
>。比较复杂的工作是在</span><span style='font-family:
"Arial","sans-serif"'>getChildMeasureSpec</span><span >中完成的。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>child&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>需要测量的子视图</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>parentWidthMeasureSpec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>当前视图要求的宽度</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>widthUsed&nbsp;&nbsp;&nbsp; </span><span
>水平方向上由父视图使用的空白</span><span style='font-family:
"Arial","sans-serif"'> (</span><span >也可能是视图的其他子视图使用的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>)</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>parentHeightMeasureSpec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>当前视图要求的宽度</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>heightUsed&nbsp; </span><span
>垂直方向上由父视图使用的空白</span><span style='font-family:
"Arial","sans-serif"'> (</span><span >也可能是视图的其他子视图使用的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>)</span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected void <b>onLayout</b> (boolean changed, int
l, int t, int r, int b) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >当前视图需要为子视图分配大小和位置时候调用，子类继承必须要重载此方法并调用自己子视图的</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>layout</span><span
>函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>changed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>当前视图的新的大小或者位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>l&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>相对父视图，左边界位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>t&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>相对父视图，上边界位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>r&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>相对父视图，右边界位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>b&nbsp;&nbsp;&nbsp; </span><span
>相对父视图，下边界位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected void <b>onMeasure</b> (int
widthMeasureSpec, int heightMeasureSpec) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >测量视图以确定其内容宽度和高度。此方法被</span><span
lang=EN-US>measure(int, int)</span><span >调用。需要被子类重写以提供对其内容准确高效的测量。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >约定：当重写此方法时，你必须调用</span><span
lang=EN-US>setMeasuredDimension(int, int)</span><span >来保存当前视图</span><span
lang=EN-US>view</span><span >的宽度和高度。不成功调用此方法将会导致一个</span><span
lang=EN-US>IllegalStateException</span><span >异常，是由</span><span
lang=EN-US>measure(int, int)</span><span >抛出。所以调用父类的</span><span
lang=EN-US>onMeasure(int, int)</span><span >方法是必须的。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >父类的实现是以背景大小为默认大小，除非</span><span
lang=EN-US>MeasureSpec</span><span >（测量细则）允许更大的背景。子类可以重写</span><span
lang=EN-US>onMeasure(int,int)</span><span >以对其内容提供更佳的尺寸。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >如果此方法被重写，那么子类的责任是确认测量高度和测量宽度要大于视图</span><span
lang=EN-US>view</span><span >的最小宽度和最小高度（</span><span
lang=EN-US>getSuggestedMinimumHeight() </span><span >和</span><span
lang=EN-US> getSuggestedMinimumWidth()</span><span >），使用这两个方法可以取得最小宽度和最小高度。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>widthMeasureSpec </span><span >受主窗口支配的水平空间要求。这个需求通过</span><span
lang=EN-US> View.MeasureSpec.</span><span >进行编码。</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>　　</span> <span>heightMeasureSpec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>受主窗口支配的垂直空间要求。这个需求通过</span><span> View.MeasureSpec.</span><span
>进行编码。</span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:#D9D9D9'>protected void <b>onOverScrolled</b> (int scrollX,
int scrollY, boolean clampedX, boolean clampedY)</span></span></p>
<p class=MsoNormal><span style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>被</span><code><span style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#overScrollBy%28int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20boolean%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>overScrollBy(int,
int, int, int, int, int, int, int, boolean)</span></a></span></code><span
>调用，来对一个</span><span>over-scroll</span><span
>操作的结果进行响应。（<span style='color:#C00000'>译者注：这个函数是</span></span><span
lang=EN-US style='color:#C00000'>2.3 r1 </span><span style=';
color:#C00000'>中新增的，</span><span style='color:#C00000'>API Level 9</span><span
>）</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>scrollX &nbsp;&nbsp;&nbsp; </span><span >新的</span><span
lang=EN-US>X</span><span >滚动像素值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>scrollY &nbsp;&nbsp;&nbsp; </span><span >新的</span><span
lang=EN-US>Y</span><span >滚动像素值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>clampedX &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>当</span><span>scrollX</span><span
>被</span><span>over-scroll</span><span
>的边界限制时，值为</span><span>true</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>clampedY &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>当</span><span>scrollY</span><span
>被</span><span>over-scroll</span><span
>的边界限制时，值为</span><span>true</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected boolean <b>onRequestFocusInDescendants</b>
(int direction, <a
href="android/android-sdk-windows/docs/reference/android/graphics/Rect.html"><span
style='color:windowtext;text-decoration:none'>Rect</span></a>
previouslyFocusedRect) </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >当在滚动视图的子视图中查找焦点视图时，需要注意不要将焦点设置在滚动出屏幕外的控件上。此方法会比执行缺省的</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/ViewGroup.html"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>ViewGroup</span></a></span></code><span
>代价高，否则此行为也会设置为缺省</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><b><span
style='font-family:"Arial","sans-serif"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b><span
lang=EN-US style='font-family:"Arial","sans-serif"'>direction </span><span
>指定下列常量之一：</span><span style='font-family:
"Arial","sans-serif"'>FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT</span></p>
<p class=MsoNormal style='margin-left:48.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif"'>previouslyFocusedRect&nbsp; </span><span
>能够给出一个较好的提示的矩形（当前视图的坐标系统）表示焦点从哪里得来。如果没有提示为</span><span
lang=EN-US style='font-family:"Arial","sans-serif"'>null</span><span
>。</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:48.0pt;text-indent:24.0pt'><span
>是否取得了焦点</span></p>
<p class=MsoNormal style='margin-left:24.0pt;text-indent:24.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:24.0pt'><span
style='background:silver'>protected void <b>onSizeChanged</b> (int w, int h,
int oldw, int oldh) </span></p>
<p class=MsoNormal><span style=';color:#333333'>布局期间当视图的大小发生改变时调用。如果只是添加到视图，调用时显示的是旧值</span><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>0</span><span
style=';color:#333333'>。（译者注：也就是添加到视图时，</span><span
style='font-family:"Arial","sans-serif";color:#333333'>oldw</span><span
style=';color:#333333'>和</span><span style='font-family:
"Arial","sans-serif";color:#333333'>oldh</span><span style=';
color:#333333'>返回的是</span><span style='font-family:"Arial","sans-serif";
color:#333333'>0</span><span style=';color:#333333'>）。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style=';color:#333333'>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>w&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>视图当前宽度</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>h&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>视图当前高度</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>oldw&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>视图改变前的宽度</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US style='font-family:"Arial","sans-serif";color:#333333'>oldh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style=';color:#333333'>视图改变前的高度</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>补充</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>文章精选</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US><a target="_blank" href="http://android.group.javaeye.com/group/blog/149773">Android
ApiDemos/ScrollView2 <span ><span>添加自动滚动和智能焦点切换</span></span></a></span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US>[Android</span><span >学习指南</span><span
lang=EN-US>]<a target="_blank" href="http://android.yaohuiji.com/archives/319"><span
lang=EN-US ><span>使用</span></span>ScrollView<span
lang=EN-US ><span>实现滚动效果</span></span></a></span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US><a target="_blank" href="http://blog.liaoxiaoqi.com/?p=503">Android<span
><span>中</span></span>ScrollView<span
lang=EN-US ><span>与</span></span>ListView<span
lang=EN-US ><span>共用问题的解决方案</span></span></a></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
lang=EN-US>&nbsp;</span></p>

</div>

<span style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><br
clear=all style='page-break-before:auto'>
</span>

      
</body>
</html>
