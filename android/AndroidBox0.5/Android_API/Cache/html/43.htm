<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<link rel="stylesheet" href="Word2Chm.css" type="text/css">
<title> ViewTreeObserver</title>
</head>
<body>     
<div class=WordSection43 style='layout-grid:15.6pt'><br clear=all
style='page-break-before:always'>

<p class=MsoNormal align=center style='text-align:center'><a
name=ViewTreeObserver><b><span style='font-size:18.0pt'>ViewTreeObserver</span></b></a></p>
<p class=MsoNormal align=center style='text-align:center'><span
>译者署名：</span> <span >首当其冲</span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>版本：</span><span>Android 3.0 r1</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>结构</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>继承关系</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><b><i><span>public final class<span
style='color:#C00000'> ViewTreeObserver</span> extends <span style='color:#C00000'>Object</span></span></i></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US>java.lang.Object</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android.view.ViewTreeObserver</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>类概述</span></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><span >用于注册监听的视图树观察者</span><span
lang=EN-US>(observer)</span><span >，在视图树种全局事件改变时得到通知。这个全局事件不仅还包括整个树的布局，从绘画过程开始，触摸模式的改变等。</span><span
lang=EN-US>ViewTreeObserver</span><span >不能够被应用程序实例化，因为它是由视图提供，参照</span><code><span
lang=EN-US style='font-size:12.0pt'><a target="_blank" href="http://developer.android.com/reference/android/view/View.html#getViewTreeObserver%28%29"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>getViewTreeObserver()</span></a></span></code><span
>以查看更多信息。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>内部类</span></b></p>
<p class=MsoListParagraph><span style='background:#D9D9D9'>interface
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ViewTreeObserver.OnGlobalFocusChangeListener</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoListParagraph><span >当在一个视图树中的焦点状态发生改变时，所要调用的回调函数的接口类</span></p>
<p class=MsoListParagraph><span>&nbsp;</span></p>
<p class=MsoListParagraph><span style='background:#D9D9D9'>interface
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ViewTreeObserver.OnGlobalLayoutListener</span></p>
<p class=MsoListParagraph><span >当在一个视图树中全局布局发生改变或者视图树中的某个视图的可视状态发生改变时，所要调用的回调函数的接口类</span></p>
<p class=MsoListParagraph><span>&nbsp;</span></p>
<p class=MsoListParagraph><span style='background:#D9D9D9'>interface
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ViewTreeObserver.OnPreDrawListener</span></p>
<p class=MsoListParagraph><span >当一个视图树将要绘制时，所要调用的回调函数的接口类</span></p>
<p class=MsoListParagraph><span>&nbsp;</span></p>
<p class=MsoListParagraph><span style='background:#D9D9D9'>interface
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ViewTreeObserver.OnScrollChangedListener</span></p>
<p class=MsoListParagraph><span >当一个视图树中的一些组件发生滚动时，所要调用的回调函数的接口类</span></p>
<p class=MsoListParagraph><span>&nbsp;</span></p>
<p class=MsoListParagraph><span style='background:#D9D9D9'>interface
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ViewTreeObserver.OnTouchModeChangeListener</span></p>
<p class=MsoListParagraph><span >当一个视图树的触摸模式发生改变时，所要调用的回调函数的接口类</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>公共方法</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
lang=EN-US style='background:#D9D9D9'>public void <b>addOnGlobalFocusChangeListener</b>
(ViewTreeObserver.OnGlobalFocusChangeListener listener)</span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>注册一个回调函数，当在一个视图树中的焦点状态发生改变时调用这个回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listener&nbsp;&nbsp;&nbsp; </span><span
>将要被添加的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>addOnGlobalLayoutListener</b>
(ViewTreeObserver.OnGlobalLayoutListener listener)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >注册一个回调函数，当在一个视图树中全局布局发生改变或者视图树中的某个视图的可视状态发生改变时调用这个回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listener&nbsp;&nbsp;&nbsp; </span><span
>将要被添加的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>addOnPreDrawListener</b>
(ViewTreeObserver.OnPreDrawListener listener)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >注册一个回调函数，当一个视图树将要绘制时调用这个回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listener&nbsp;&nbsp;&nbsp; </span><span
>将要被添加的回调函数</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>addOnScrollChangedListener</b>
(ViewTreeObserver.OnScrollChangedListener listener)</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >注册一个回调函数，当一个视图发生滚动时调用这个回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listener&nbsp;&nbsp;&nbsp; </span><span
>将要被添加的回调函数</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>addOnTouchModeChangeListener</b>
(ViewTreeObserver.OnTouchModeChangeListener listener)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >注册一个回调函数，当一个触摸模式发生改变时调用这个回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listener&nbsp;&nbsp;&nbsp; </span><span
>将要被添加的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false</span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public final void <b>dispatchOnGlobalLayout</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >当整个布局发生改变时通知相应的注册监听器。如果你强制对视图布局或者在一个没有附加到一个窗口的视图的层次结构或者在</span><span
lang=EN-US>GONE</span><span >状态下，它可以被手动的调用</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public final boolean <b>dispatchOnPreDraw</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >当一个视图树将要绘制时通知相应的注册监听器。如果这个监听器返回</span><span
lang=EN-US>true</span><span >，则这个绘制将被取消并重新计划。如果你强制对视图布局或者在一个没有附加到一个窗口的视图的层次结构或者在一个</span><span
lang=EN-US>GONE</span><span >状态下，它可以被手动的调用</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>当前绘制能够取消并重新计划则返回</span><span>true</span><span
>，否则返回</span><span>false</span><span
>。</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public boolean <b>isAlive</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >指示当前的</span><span
lang=EN-US>ViewTreeObserver</span><span >是否可用</span><span
lang=EN-US>(alive)</span><span >。当</span><span
lang=EN-US>observer</span><span >不可用时，任何方法的调用（除了这个方法）都将抛出一个异常。如果一个应用程序保持和</span><span
lang=EN-US>ViewTreeObserver</span><span >一个历时较长的引用，它应该总是需要在调用别的方法之前去检测这个方法的返回值。</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>但这个对象可用则返回</span><span>true</span><span
>，否则返回</span><span>false&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>removeGlobalOnLayoutListener</b>
(ViewTreeObserver.OnGlobalLayoutListener victim)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >移除之前已经注册的全局布局回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; victim
</span><span >将要被移除的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>removeOnGlobalFocusChangeListener</b>
(ViewTreeObserver.OnGlobalFocusChangeListener victim)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >移除之前已经注册的焦点改变回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; victim
</span><span >将要被移除的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span
style='background:#D9D9D9'>public void <b>removeOnPreDrawListener</b>
(ViewTreeObserver.OnPreDrawListener victim)</span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span >移除之前已经注册的预绘制回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; victim
</span><span >将要被移除的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span
style='background:#D9D9D9'>public void <b>removeOnScrollChangedListener</b>
(ViewTreeObserver.OnScrollChangedListener victim)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >移除之前已经注册的滚动改变回调函数。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; victim
</span><span >将要被移除的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='margin-left:21.0pt'><span
style='background:#D9D9D9'>public void <b>removeOnTouchModeChangeListener</b>
(ViewTreeObserver.OnTouchModeChangeListener victim)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >移除之前已经注册的触摸模式改变回调函数</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; victim
</span><span >将要被移除的回调函数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>异常</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IllegalStateException&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>如果</span><span>isAlive() </span><span
>返回</span><span>false&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>补充</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>文章链接</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span
lang=EN-US>&nbsp;<a target="_blank" href="http://cn.webdiscussion.info/question/1219312/Android%E7%9A%84%E9%80%89%E6%8B%A9%E5%8F%8A%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2">Android<span
lang=EN-US ><span>的选择及文字颜色</span></span></a></span></p>

</div>

<span style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><br
clear=all style='page-break-before:auto'>
</span>

      
</body>
</html>
