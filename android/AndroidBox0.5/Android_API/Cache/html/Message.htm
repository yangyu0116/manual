<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=Generator content="Word2Chm Addin (v1.4.7.4)">
<link rel="stylesheet" href="Word2Chm.css" type="text/css">

<title> Message</title>
</head>
<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'       
<div class=WordSection1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Message</span></b></p>
<p class=MsoNormal align=center style='text-align:center'><span
>译者署名：</span> <span>strongxu</span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>译者微博：</span><span><a target="_blank" href="http://t.qq.com/strongxu">http://t.qq.com/strongxu</a> </span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>版本：</span><span>Android 3.1 r1</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>结构</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>继承关系</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><b><i><span>public final class <span
style='color:#C00000'>Message</span> extends <span style='color:#C00000'>Object
</span>implements<span style='color:#C00000'> Parcelable</span></span></i></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:21.0pt'><span>java.lang.Object</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left;
text-indent:21.0pt'><span>android.os.Message</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>类概述</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:20.25pt'><span
>定义一个包含任意类型的描述数据对象，此对象可以发送给</span><span>Handler</span><span
>。对象包含两个额外的</span><span>int</span><span
>字段和一个额外的对象字段，这样可以使得在很多情况下不用做分配工作。</span></p>

<div style='border:none;border-left:solid #99AACC 3.0pt;padding:0cm 0cm 0cm 11.0pt;
margin-left:42.0pt;margin-right:0cm'>

<p class=MsoNormal align=left style='margin-top:6.0pt;margin-right:0cm;
margin-bottom:0cm;margin-left:0cm;margin-bottom:.0001pt;text-align:left;
line-height:15.6pt;border:none;padding:0cm'><span >尽管</span><span>Message</span><span >的构造器是公开的，但是获取</span><span>Message</span><span >对象的最好方法是调用</span><span>Message.obtain()</span><span >或者</span><span>Handler.obtainMessage(), </span><span >这样是从一个可回收对象池中获取</span><span>Message</span><span >对象。</span></p>

</div>

<p class=MsoNormal align=left style='text-align:left;text-indent:20.25pt'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>字段</span></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
style='background:#D9D9D9'>public static final
Creator&lt;Message&gt; <b>CREATOR</b></span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><b><span>&nbsp;</span></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><b><span>&nbsp;</span></b></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
style='background:#D9D9D9'>public int <b>arg1</b></span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
>如果只需要存储几个整型数据，</span><span>arg1 </span><span
>和</span><span> arg2</span><span
>是</span><span>setData()</span><span
>的低成本替代品。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
style='background:#D9D9D9'>public int <b>arg2</b></span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
>如果只需要存储几个整型数据，</span><span>arg1 </span><span
>和</span><span> arg2</span><span
>是</span><span>setData()</span><span
>的低成本替代品。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
style='background:#D9D9D9'>public Object <b>obj</b></span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>发送给接收器的任意对象。当使用</span><span>Message</span><span
>对象在线程间传递消息时，如果它包含一个</span><span>Parcelable</span><span
>的结构类（不是由应用程序实现的类），此字段必须为非空（</span><span>non-null</span><span
>）。其他的数据传输则使用</span><span>setData(Bundle)</span><span
>方法。</span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>注意</span><span>Parcelable</span><span
>对象是从</span><span>FROYO</span><span
>版本以后才开始支持的。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left;
text-indent:20.25pt'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
style='background:#D9D9D9'>public Messenger <b>replyTo</b></span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>指明此</span><span>message</span><span
>发送到何处的可选</span><span>Messenger</span><span
>对象。具体的使用方法由发送者和接受者决定。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span
style='background:#D9D9D9'>public int <b>what</b></span></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>用户自定义的消息代码，这样接受者可以了解这个消息的信息。每个</span><span>handler</span><span
>各自包含自己的消息代码，所以不用担心自定义的消息跟其他</span><span>handlers</span><span
>有冲突。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>公共构造器</span></b></p>
<p class=MsoListParagraph><span style='background:#D9D9D9'>public &nbsp;&nbsp;&nbsp;&nbsp; <b>Message()</b></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoListParagraph><span >构造器（但是获取</span><span>Message</span><span >对象的最好方法是调用</span><span>Message.obtain()</span><span >）。</span></p>
<p class=MsoNormal align=left style='margin-left:21.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>公共方法</span></b></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>copyFrom</b> (Message o)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >使此</span><span>message</span><span >跟参数</span><span>o</span><span >相似。浅拷贝数据域。不拷贝源</span><span>message</span><span >的链表字段，时间戳和目标</span><span>/</span><span >回调。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public int <b>describeContents</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >描述了包含在</span><span>Parcelable</span><span >对象排列信息中的特殊对象的类型。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>一个标志位，表明</span><span>Parcelable</span><span
>对象特殊对象类型集合的排列。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public Runnable <b>getCallback</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >获取回调对象，此对象会在</span><span>message</span><span >处理时执行。此对象必须实现</span><span>Runnable</span><span >接口。回调由接收此消息并分发的目标</span><span>handler</span><span >调用。如果没有设置回调，此消息会分发到接收</span><span>handler</span><span >的</span><span>handleMessage(Message)</span><span
>。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public Bundle <b>getData</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >获取附加在此事件上的任意数据的</span><span>Bundle</span><span >对象，需要时延迟创建。通过调用</span><span>setData(Bundle)</span><span >来设置</span><span>Bundle</span><span >的值。需要注意的是，如果通过</span><span>Messenger</span><span >对象在进程间传递数据时，需要调用</span><span>Bundle</span><span >类的</span><span>Bundle.setClassLoader()</span><span
>方法来设置</span><span>ClassLoader</span><span
>，这样当接收到消息时可以实例化</span><span>Bundle</span><span
>里的对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参考</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; peekData()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setData(Bundle)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public Handler <b>getTarget</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >获取将接收此消息的</span><span>Handler</span><span >对象。此对象必须要实现</span><span>Handler.handleMessage()</span><span >方法。每个</span><span>handler</span><span >各自包含自己的消息代码，所以不用担心自定义的消息跟其他</span><span>handlers</span><span >有冲突。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public long <b>getWhen</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回此消息的传输时间，以毫秒为单位。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Handler h, int
what, int arg1, int arg2, Object obj)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>obtain()</span><span >一样，但是设置了</span><span>target, what, arg1, arg2</span><span >和</span><span>obj</span><span >的值。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>target</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; what&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>what</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arg1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>arg1</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arg2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>arg2</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>obj</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Handler h, int
what, Object obj)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>obtain()</span><span >一样，但是设置了</span><span>target, what</span><span >和</span><span>obj</span><span >的值。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>target</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; what
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span >设置的</span><span>what</span><span >值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>obj</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Handler h, int
what)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>obtain()</span><span >一样，但是设置了</span><span>target</span><span >和</span><span>what</span><span
>的值。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; target</span><span
>的值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; what&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; what</span><span
>的值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Handler h)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>obtain()</span><span >一样，但是设置了</span><span>target</span><span >的值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>消息对象的</span><span>target</span><span
>成员的值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Handler h,
Runnable callback)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>obtain(Handler)</span><span >一样，但是设置回调函数，在</span><span>Message</span><span >返回时调用。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>消息对象的</span><span>target</span><span
>成员的值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; callback&nbsp;&nbsp;&nbsp; </span><span
>当消息处理时会调用的回调函数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >从全局池中返回一个新的</span><span>Message</span><span >实例。在大多数情况下这样可以避免分配新的对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Handler h, int
what, int arg1, int arg2)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>obtain()</span><span >一样，但是设置了</span><span>target, what, arg1</span><span >和</span><span>arg2</span><span >的值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>targe</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; what&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>what</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arg1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>arg1</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arg2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>设置的</span><span>arg2</span><span
>值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public static Message <b>obtain</b> (Message obj)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >同</span><span>obtain()</span><span >，但是从一个已存在的消息中拷贝值（包括它的目标）。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参数</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; orig&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>要拷贝的源消息</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>从全局池中分配的一个</span><span>Message</span><span
>对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public Bundle <b>peekData</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >与</span><span>getData()</span><span >相似，但是并不延迟创建</span><span>Bundle</span><span >。如果</span><span>Bundle</span><span >对象不存在返回</span><span>null</span><span >。更多信息见</span><span>getData()</span><span >。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>参考</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getData()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setData(Bundle)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>recyle</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >向全局池中返回一个</span><span>Message</span><span >实例。一定不能在调用此函数后再使用</span><span>Message</span><span >――它会立即被释放。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>sendToTarget</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >向</span><span>Handler</span><span >发送此消息，</span><span>getTarget()</span><span >方法可以获取此</span><span>Handler</span><span >。如果这个字段没有设置会抛出个空指针异常。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>setData</b> (Bundle data)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >设置一个任意数据值的</span><span>Bundle</span><span >对象。如果可以，使用</span><span>arg1</span><span >和</span><span>arg2</span><span
>域发送一些整型值以减少消耗。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参考</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getData()</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; peekData()</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>setTarget</b> (Handler target)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >设置将接收此消息的</span><span>Handler</span><span >对象。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public String <b>toString</b> ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回一个</span><span>Message</span><span >对象简单的，可读懂的描述信息。鼓励子类重写此方法，实现时最好把对象的类型的数据考虑进去。默认的实现等同与以下表达式：</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span><img border=0
width=553 height=31
src="image/2011-6-24.jpg"></span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >如果需要实现</span><span>toString</span><span >方法，参考</span><span><a target="_blank" href="http://developer.android.com/reference/java/lang/Object.html#writing_toString">Writing
a useful toString method</a></span><span >。</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>返回值</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>一个代表此对象的可打印字符串</span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>public void <b>writeToParcel</b> (Parcel dest, int
flags)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >将类的数据写入外部提供的</span><span>Parcel</span><span >中</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest&nbsp;&nbsp;
</span><span >对象被写入的</span><span>Parcel</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flags
</span><span >对象如何被写入的附加标志，可能是</span><span>0</span><span
>或</span><span><a target="_blank" href="http://developer.android.com/reference/android/os/Parcelable.html#PARCELABLE_WRITE_RETURN_VALUE">PARCELABLE_WRITE_RETURN_VALUE</a></span><span
>。</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
style='font-size:12.0pt;'>补充</span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>文章精选</span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span><a target="_blank" href="http://qaohao.iteye.com/blog/509145">Android<span
><span>中</span></span>Message<span
><span>机制的灵活应用</span></span></a></span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span><a target="_blank" href="http://www.android123.com.cn/androidkaifa/422.html">Thread<span
><span>和</span></span>Looper<span
><span>以及</span></span>Handler<span
><span>和</span></span>Message<span
><span>详解</span></span></a></span></p>
<p class=MsoNormal align=left style='margin-left:42.0pt;text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>

</div>

     
</body>
</html>
