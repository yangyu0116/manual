<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<link rel="stylesheet" href="Word2Chm.css" type="text/css">
<title> AbsoluteLayout</title>
</head>
<body>     
<div class=WordSection57 style='layout-grid:15.6pt'><br clear=all
style='page-break-before:always'>

<p class=MsoNormal align=center style='text-align:center'><a
name=AbsoluteLayout><b><span style='font-size:22.0pt'>AbsoluteLayout</span></b></a><b><span
lang=EN-US style='font-size:22.0pt'> </span></b></p>
<p class=MsoNormal align=center style='text-align:center'><span
>译者署名：</span><span>madgoat</span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>译者链接：<span><a target="_blank" href="http://madgoat.cn/">http://madgoat.cn/</a>
</span></span></p>
<p class=MsoNormal align=center style='text-align:center'><span
>版本：<span>Android 2.2 r1</span></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><i><span>public
class <span style='color:#C00000'>AbsoluteLayout</span> extends <span
style='color:#C00000'>ViewGroup</span></span></i></b></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>java.lang.Object</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US><a target="_blank" href="http://www.cnblogs.com/over140/archive/2010/09/11/1823806.html">android.view.View</a></span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US>android.view.ViewGroup</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android.widget.AbsoluteLayout</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
>直接子类</span></b></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebView</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><span style='font-family:
宋体;background:yellow'>此类不赞成使用。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span style='font-family:
宋体;background:yellow'>推荐使用</span><code><span style='font-size:12.0pt;
background:yellow'><a target="_blank" href="http://developer.android.com/reference/android/widget/FrameLayout.html"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>FrameLayout</span></a></span></code><span
style=';background:yellow'>，</span><code><span
style='font-size:12.0pt;background:yellow'><a target="_blank" href="http://developer.android.com/reference/android/widget/RelativeLayout.html"><span
style='font-size:10.5pt;font-family:"Calibri","sans-serif"'>RelativeLayout</span></a></span></code><span
style=';background:yellow'>或者定制的</span><span
style='background:yellow'>layout</span><span style=';background:
yellow'>代替。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal align=left style='text-align:left'><b><span
>概述</span></b></p>
<p class=MsoNormal align=left style='text-align:left'><b><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img
border=0 width=322 height=228
src="image/image049.png"></span></b></p>
<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
>让你指定子元素的<span>xy</span>精确坐标的布局。绝对布局缺乏灵活性，在没有绝对定位的情况下相比其他类型的布局更难维护。</span></p>
<p class=MsoNormal align=left style='text-align:left'><span>&nbsp;</span></p>
<p class=MsoNormal><b><span >公共方法</span></b><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:#D9D9D9'>public ViewGroup.LayoutParams generateLayoutParams
(AttributeSet attrs)</span></span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回一组新的基于所支持的属性集的布局参数</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>参数</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>attrs &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>构建</span><span>layout</span><span
>布局参数的属性集合</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
>返回值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>一个</span><span>ViewGroup.LayoutParams</span><span
>的实例或者它的一个子类</span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal><b><span >受保护方法</span></b></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='background:#D9D9D9'>protected ViewGroup.LayoutParams
generateLayoutParams (ViewGroup.LayoutParams p)</span></span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回一组合法的受支持的布局参数。当一个</span><span
lang=EN-US>ViewGroup</span><span >传递一个布局参数没有通过</span><span
lang=EN-US>checkLayoutParams(android.view.ViewGroup.LayoutParams)</span><span
>检测的视图时，此方法被调用。此方法会返回一组新的适合当前</span><span>ViewGroup</span><span
>的布局参数，可能从指定的一组布局参数中复制适当的属性。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><b><span
>参数</span></b></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>p &nbsp;&nbsp;&nbsp;&nbsp; </span><span >被转换成一组适合当前</span><span
lang=EN-US> ViewGroup</span><span >的布局参数</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><b><span
>返回值</span></b></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>an instance of ViewGroup.LayoutParams or one of its descendants </span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>一个</span><span>ViewGroup.LayoutParams</span><span
>的实例或者其中的一个子节点</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><b><span
style='background:silver'>protected boolean checkLayoutParams
(ViewGroup.LayoutParams p)</span></b></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>（译者注：检测是不是</span><span>AbsoluteLayout.LayoutParams</span><span
>的实例，见源码：</span></p>
<p class=MsoNormal><span><img border=0 width=553 height=66
src="image/image050.png"></span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:#D9D9D9'>protected ViewGroup.LayoutParams
generateDefaultLayoutParams ()</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >返回一组宽度为</span><span
lang=EN-US>WRAP_CONTENT,</span><span >高度为</span><span
lang=EN-US>WRAP_CONTENT,</span><span >坐标是（</span><span
lang=EN-US>0</span><span >，</span><span>0</span><span
>）的布局参数</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><b><span
>返回值</span></b></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
>一组默认的布局参数或</span><span>null</span><span
>值</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><b><span
style='background:silver'>protected void onLayout (boolean changed, int l, int
t, int r, int b)</span></b></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >在此视图</span><span
lang=EN-US>view</span><span >给他的每一个子元素分配大小和位置时调用。</span> <span
>派生类可以重写此方法并且重新安排他们子类的布局。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><b><span
>参数</span></b></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>changed&nbsp;&nbsp; </span><span >这是当前视图</span><span
lang=EN-US>view</span><span >的一个新的大小或位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>相对于父节点的左边位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>相对于父节点的顶点位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>相对于父节点的右边位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='font-family:
宋体'>相对于父节点的底部位置</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&nbsp;</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span
style='background:silver'>protected void onMeasure (int widthMeasureSpec, int
heightMeasureSpec)</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >测量视图以确定其内容宽度和高度。此方法被</span><span
lang=EN-US>measure(int, int)</span><span >调用。需要被子类重写以提供对其内容准确高效的测量。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >约定：当重写此方法时，你必须调用</span><span
lang=EN-US>setMeasuredDimension(int, int)</span><span >来保存当前视图</span><span
lang=EN-US>view</span><span >的宽度和高度。不成功调用此方法将会导致一个</span><span
lang=EN-US>IllegalStateException</span><span >异常，是由</span><span
lang=EN-US>measure(int, int)</span><span >抛出。所以调用父类的</span><span
lang=EN-US>onMeasure(int, int)</span><span >方法是必须的。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >父类的实现是以背景大小为默认大小，除非</span><span
lang=EN-US>MeasureSpec</span><span >（测量细则）允许更大的背景。子类可以重写</span><span
lang=EN-US>onMeasure(int,int)</span><span >以对其内容提供更佳的尺寸。</span></p>
<p class=MsoNormal style='text-indent:21.0pt'><span >如果此方法被重写，那么子类的责任是确认测量高度和测量宽度要大于视图</span><span
lang=EN-US>view</span><span >的最小宽度和最小高度（</span><span
lang=EN-US>getSuggestedMinimumHeight() and getSuggestedMinimumWidth()</span><span
>），使用这两个方法可以取得最小宽度和最小高度。</span></p>
<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><b><span
>参数</span></b></p>
<p class=MsoNormal style='margin-left:168.0pt;text-indent:-105.0pt'><span
lang=EN-US>widthMeasureSpec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>强加于父节点的横向空间要求。要求是使用</span><span>View.MeasureSpec</span><span
>进行编码</span></p>
<p class=MsoNormal style='margin-left:168.0pt;text-indent:-105.0pt'><span
lang=EN-US>heightMeasureSpec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>强加于父节点的纵向空间要求。要求是使用</span><span>View.MeasureSpec</span><span
>进行编码。</span></p>
<p class=MsoNormal><span>&nbsp;</span></p>
<p class=MsoNormal><b><span >补充</span></b></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>文件链接</span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a target="_blank" href="http://jakielong.javaeye.com/blog/734863">Android<span
><span>的几种布局方式</span></span></a></span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a target="_blank" href="http://android.yaohuiji.com/archives/tag/absolutelayout"><span
lang=EN-US ><span>第六讲：用户界面</span></span> View<span
lang=EN-US ><span>（二）</span></span></a></span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a target="_blank" href="http://www.eoeandroid.com/redirect.php?tid=6002&amp;goto=lastpost"><span
lang=EN-US ><span>如何动态改变</span></span>
AbsoluteLayout<span ><span>布局中其它布局的坐标</span></span></a></span></p>
<p class=MsoNormal><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
>示例代码</span></p>
<p class=MsoNormal style='margin-left:42.0pt'><span>&lt;AbsoluteLayout</span></p>
<p class=MsoNormal style='margin-left:42.0pt'><span>android:id=&quot;@+id/AbsoluteLayout01&quot;
android:layout_height=&quot;wrap_content&quot;</span></p>
<p class=MsoNormal style='margin-left:42.0pt'><span>android:layout_width=&quot;fill_parent&quot;
&gt; </span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&lt;TextView</span></p>
<p class=MsoNormal style='margin-left:63.0pt;text-indent:21.0pt'><span
lang=EN-US>android:text=&quot;TextView01&quot;
android:id=&quot;@+id/TextView01&quot;</span></p>
<p class=MsoNormal style='margin-left:63.0pt;text-indent:21.0pt'><span
lang=EN-US>android:layout_height=&quot;wrap_content&quot;
android:layout_y=&quot;10px&quot;</span></p>
<p class=MsoNormal style='margin-left:63.0pt;text-indent:21.0pt'><span
lang=EN-US>android:layout_width=&quot;wrap_content&quot;
android:layout_x=&quot;110px&quot;&gt;</span></p>
<p class=MsoNormal style='margin-left:42.0pt;text-indent:21.0pt'><span
lang=EN-US>&lt;/TextView&gt;</span></p>
<p class=MsoNormal style='margin-left:42.0pt'><span>&nbsp;&lt;/AbsoluteLayout&gt;</span></p>
<p class=MsoNormal align=right style='margin-right:10.5pt;text-align:right'><span
lang=EN-US>&nbsp;</span></p>

</div>

<span style='font-size:10.5pt;font-family:"Calibri","sans-serif"'><br
clear=all style='page-break-before:auto'>
</span>

      
</body>
</html>
